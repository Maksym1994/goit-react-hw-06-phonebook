{"version":3,"sources":["components/Filter/Filter.module.css","App.module.css","components/redux/contacts/contacts-action.js","components/ContactForm/ContactForm.jsx","components/redux/contacts/contacts-selector.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","components/redux/contacts/contacts-reducer.js","components/redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","newContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","ContactForm","dispatch","useDispatch","useState","setName","setNumber","handleChange","e","target","value","reset","className","s","form","onSubmit","preventDefault","labelTitle","input","type","pattern","title","required","onChange","button","getFilter","state","contacts","filter","getFilteredContacts","items","getContacts","normalizedFilter","toLowerCase","contact","includes","ContactList","useSelector","map","contactItem","itemName","deleteBtn","onClick","onDeleteContact","Filter","titleFilter","inputFilter","App","createReducer","actions","some","alert","_","combineReducers","contactsPersistConfig","key","storage","rootReducer","contactsReducer","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,YAAc,4BAA4B,YAAc,8B,mBCA1ED,EAAOC,QAAU,CAAC,MAAQ,qB,8ICEpBC,EAAaC,YAAa,gBAAgB,SAACC,EAAMC,GAAP,MAAmB,CACjEC,QAAS,CACPF,OACAC,SACAE,GAAIC,mBAIFC,EAAgBN,YAAa,mBAE7BO,EAAeP,YAAa,yB,uBC8DnBQ,MAtEf,WACE,IAAMC,EAAWC,cAGjB,EAAwBC,mBAAS,IAAjC,mBAAOV,EAAP,KAAaW,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOT,EAAP,KAAeW,EAAf,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBf,EAAR,EAAQA,KAAMgB,EAAd,EAAcA,MAEd,OAAQhB,GACN,IAAK,OACHW,EAAQK,GACR,MACF,IAAK,SACHJ,EAAUI,KAeVC,EAAQ,WACZN,EAAQ,IACRC,EAAU,KAGZ,OACE,uBAAMM,UAAWC,IAAEC,KAAMC,SAbN,SAAAP,GACnBA,EAAEQ,iBAtBa,SAACtB,EAAMC,GAAWO,EAASV,EAAWE,EAAMC,IAwB3DoB,CAASrB,EAAMC,GACfgB,KASA,UACE,kCACE,oBAAIC,UAAWC,IAAEI,WAAjB,kBACA,uBACEL,UAAWC,IAAEK,MACbR,MAAOhB,EACPyB,KAAK,OACLzB,KAAK,OACL0B,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUhB,OAGd,kCACE,oBAAIK,UAAWC,IAAEI,WAAjB,oBACA,uBACEL,UAAWC,IAAEK,MACbR,MAAOf,EACPwB,KAAK,MACLzB,KAAK,SACL0B,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUhB,OAGd,wBAAQK,UAAWC,IAAEW,OAAQL,KAAK,SAAlC,iCClEOM,EAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASC,QAEpCC,EAAsB,SAAAH,GACjC,IAAMC,EALmB,SAAAD,GAAK,OAAIA,EAAMC,SAASG,MAKhCC,CAAYL,GAGvBM,EAFSP,EAAUC,GAEOO,cAEhC,OAAON,EAASC,QAAO,SAAAM,GAAO,OAAIA,EAAQxC,KAAKuC,cAAcE,SAASH,O,gBCgBzDI,EApBK,WAClB,IAAMT,EAAWU,YAAYR,GACvB3B,EAAWC,cAGjB,OACE,6BACGwB,EAASW,KAAI,gBAAGzC,EAAH,EAAGA,GAAIH,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAIiB,UAAWC,IAAE0B,YAAjB,UACE,oBAAG3B,UAAWC,IAAE2B,SAAhB,mBAAiC9C,KACjC,oBAAGkB,UAAWC,IAAE2B,SAAhB,qBAAmC7C,KACnC,wBAAQiB,UAAWC,IAAE4B,UAAWtB,KAAK,SAASuB,QAAS,kBARvC,SAAA7C,GAAE,OAAIK,EAASH,EAAcF,IAQgB8C,CAAgB9C,IAA7E,sBAHiCA,S,iBCM5B+C,EAdA,WACb,IAAMlC,EAAQ2B,YAAYZ,GACpBvB,EAAWC,cAIjB,OACE,qCACE,oBAAIS,UAAWC,IAAEgC,YAAjB,mCACA,uBAAOjC,UAAWC,IAAEiC,YAAa3B,KAAK,OAAOT,MAAOA,EAAOa,SAL9C,SAAAf,GAAC,OAAIN,EAASF,EAAaQ,EAAEC,OAAOC,e,iBCOxCqC,I,EAAAA,EAZf,WACE,OACE,gCACE,oBAAInC,UAAWC,IAAEQ,MAAjB,uBACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,oBAAIT,UAAWC,IAAEQ,MAAjB,sBACA,cAAC,EAAD,Q,wCCDAS,EAAQkB,YAPY,CACxB,CAAEnD,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEE,GAAI,OAAQH,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEE,GAAI,OAAQH,KAAM,iBAAkBC,OAAQ,eAGrB,mBACxBsD,GAAqB,SAACvB,EAAD,GAAyB,IAAf9B,EAAc,EAAdA,QAC9B,OAAI8B,EAAMwB,MAAK,SAAAhB,GAAO,OAAIA,EAAQxC,KAAKuC,gBAAkBrC,EAAQF,SAC/DyD,MAAM,GAAD,OAAIvD,EAAQF,KAAZ,4BACEgC,GAEH,CAAE9B,GAAR,mBAAoB8B,OANG,cAQxBuB,GAAwB,SAACvB,EAAD,OAAU9B,EAAV,EAAUA,QAAV,OAAwB8B,EAAME,QAAO,qBAAG/B,KAAgBD,QARxD,IAWrBgC,EAASoB,YAAc,GAAD,eACzBC,GAAuB,SAACG,EAAD,YAAMxD,YAGjByD,cAAgB,CAC7BvB,QACAF,W,eCbI0B,EAAwB,CAC5BC,IAAK,WACLC,Q,OAAAA,GAYIC,EAAcJ,YAAgB,CAClC1B,SAAU+B,IAGNC,EAAmBC,YAAeN,EAAuBG,GAEzDI,EAAQC,YAAe,CAC3BC,QAASJ,EACTK,WAjBiB,SAAAC,GAAoB,4BAClCA,EAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHzB,CAMrCC,OAYAC,UAAUC,IAGNC,EAAYC,YAAajB,GCjC/BkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUpB,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAaqB,QAAS,KAAML,UAAWhB,EAAvC,SACE,cAAC,EAAD,UAINsB,SAASC,eAAe,U,kBCf1B9F,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,WAAa,gCAAgC,OAAS,8B,kBCA5ID,EAAOC,QAAU,CAAC,SAAW,8BAA8B,YAAc,iCAAiC,SAAW,8BAA8B,UAAY,kC","file":"static/js/main.2f812c21.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleFilter\":\"Filter_titleFilter__1wtK3\",\"inputFilter\":\"Filter_inputFilter__3n2RR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1wUu7\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst newContact = createAction('contacts/add', (name, number) => ({\n  payload: {\n    name,\n    number,\n    id: uuidv4(),\n  },\n}));\n\nconst deleteContact = createAction('contacts/delete');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport { newContact, deleteContact, changeFilter };\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { newContact } from '../redux/contacts/contacts-action';\nimport s from 'components/ContactForm/ContactForm.module.css';\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const onSubmit = (name, number) => dispatch(newContact(name, number));\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label>\n        <h2 className={s.labelTitle}>Name</h2>\n        <input\n          className={s.input}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        <h2 className={s.labelTitle}>Number</h2>\n        <input\n          className={s.input}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add to contacts\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","export const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilteredContacts } from '../redux/contacts/contacts-selector';\nimport { deleteContact } from 'components/redux/contacts/contacts-action';\nimport s from 'components/ContactList/ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.contactItem} key={id}>\n          <p className={s.itemName}>Name: {name}</p>\n          <p className={s.itemName}>Number: {number}</p>\n          <button className={s.deleteBtn} type=\"button\" onClick={() => onDeleteContact(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../redux/contacts/contacts-selector';\nimport { changeFilter } from '../redux/contacts/contacts-action';\nimport s from 'components/Filter/Filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChange = e => dispatch(changeFilter(e.target.value));\n\n  return (\n    <>\n      <h3 className={s.titleFilter}>Find contacts by name</h3>\n      <input className={s.inputFilter} type=\"text\" value={value} onChange={onChange} />\n    </>\n  );\n};\n\nexport default Filter;\n","import ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport s from 'App.module.css';\n\nfunction App() {\n  return (\n    <div>\n      <h2 className={s.title}>Phonebook</h2>\n      <ContactForm />\n      <Filter />\n      <h2 className={s.title}>Contacts</h2>\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './contacts-action';\n\nconst itemsInitialState = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst items = createReducer(itemsInitialState, {\n  [actions.newContact]: (state, { payload }) => {\n    if (state.some(contact => contact.name.toLowerCase() === payload.name)) {\n      alert(`${payload.name} is already in contacts`);\n      return state;\n    }\n    return [payload, ...state];\n  },\n  [actions.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, combineReducers } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport contactsReducer from './contacts/contacts-reducer';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst contactsPersistConfig = {\n  key: 'Contacts',\n  storage,\n};\n\nconst middleware = getDefaultMiddleware => [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst persistedReducer = persistReducer(contactsPersistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport * as store from 'components/redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__ZCr-C\",\"input\":\"ContactForm_input__gIxqn\",\"labelTitle\":\"ContactForm_labelTitle__3_ZR6\",\"button\":\"ContactForm_button__1mE6o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemText\":\"ContactList_itemText__AX2KI\",\"contactItem\":\"ContactList_contactItem__t7pDX\",\"itemName\":\"ContactList_itemName__1XfPh\",\"deleteBtn\":\"ContactList_deleteBtn__2hO9X\"};"],"sourceRoot":""}