{"version":3,"sources":["components/Filter/Filter.module.css","App.module.css","components/redux/contacts/contacts-types.js","components/ContactForm/ContactForm.jsx","components/redux/contacts/contacts-action.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","components/redux/contacts/contacts-reducer.js","components/redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","ADD","DELETE","FILTER","connect","state","items","contacts","dispatch","onSubmit","name","number","type","payload","id","uuidv4","newContact","useState","setName","setNumber","handleChange","e","target","value","reset","className","s","form","preventDefault","labelTitle","input","pattern","title","required","onChange","button","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","contact","includes","deleteContact","map","contactItem","itemName","deleteBtn","onClick","titleFilter","inputFilter","App","localContacts","JSON","parse","window","localStorage","getItem","combineReducers","newState","setItem","stringify","rootReducer","contactsReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,YAAc,4BAA4B,YAAc,8B,mBCA1ED,EAAOC,QAAU,CAAC,MAAQ,qB,+HCDpBC,EAAM,eACNC,EAAS,kBACTC,EAAS,wB,uBCsEf,IAQeC,eARS,SAAAC,GAAK,MAAK,CAChCC,MAAOD,EAAME,SAASD,UAGG,SAAAE,GAAQ,MAAK,CACtCC,SAAU,SAACC,EAAMC,GAAP,OAAkBH,EC1EJ,SAACE,EAAMC,GAAP,MAAmB,CAC3CC,KAAMX,EACNY,QAAS,CACPH,OACAC,SACAG,GAAIC,gBDqE+BC,CAAWN,EAAMC,QAGzCP,EA3Ef,YAAoC,IAAbK,EAAY,EAAZA,SACrB,EAAwBQ,mBAAS,IAAjC,mBAAOP,EAAP,KAAaQ,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAON,EAAP,KAAeQ,EAAf,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBZ,EAAR,EAAQA,KAAMa,EAAd,EAAcA,MAEd,OAAQb,GACN,IAAK,OACHQ,EAAQK,GACR,MACF,IAAK,SACHJ,EAAUI,KAeVC,EAAQ,WACZN,EAAQ,IACRC,EAAU,KAGZ,OACE,uBAAMM,UAAWC,IAAEC,KAAMlB,SAbN,SAAAY,GACnBA,EAAEO,iBAEFnB,EAASC,EAAMC,GACfa,KASA,UACE,kCACE,oBAAIC,UAAWC,IAAEG,WAAjB,kBACA,uBACEJ,UAAWC,IAAEI,MACbP,MAAOb,EACPE,KAAK,OACLF,KAAK,OACLqB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUd,OAGd,kCACE,oBAAIK,UAAWC,IAAEG,WAAjB,oBACA,uBACEJ,UAAWC,IAAEI,MACbP,MAAOZ,EACPC,KAAK,MACLF,KAAK,SACLqB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUd,OAGd,wBAAQK,UAAWC,IAAES,OAAQvB,KAAK,SAAlC,mC,gBE5CAwB,EAAqB,SAACC,EAAaC,GACvC,IAAMC,EAAmBD,EAAOE,cAChC,OAAOH,EAAYC,QAAO,SAAAG,GAAO,OAAIA,EAAQ/B,KAAK8B,cAAcE,SAASH,OAU5DnC,eARS,SAAC,GAAD,QAAGG,SAAYD,EAAf,EAAeA,MAAOgC,EAAtB,EAAsBA,OAAtB,MAAsC,CAC5D/B,SAAU6B,EAAmB9B,EAAOgC,OAGX,SAAA9B,GAAQ,MAAK,CACtCmC,cAAe,SAAA7B,GAAE,OAAIN,EDlBM,SAAAM,GAAE,MAAK,CAClCF,KAAMV,EACNW,QAASC,GCgBqB6B,CAAc7B,QAG/BV,EA5BK,SAAC,GAAiC,IAA/BG,EAA8B,EAA9BA,SAAUoC,EAAoB,EAApBA,cAC/B,OACE,6BACGpC,EAASqC,KAAI,gBAAG9B,EAAH,EAAGA,GAAIJ,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,qBAAIc,UAAWC,IAAEmB,YAAjB,UACE,oBAAGpB,UAAWC,IAAEoB,SAAhB,mBAAiCpC,KACjC,oBAAGe,UAAWC,IAAEoB,SAAhB,qBAAmCnC,KACnC,wBAAQc,UAAWC,IAAEqB,UAAWnC,KAAK,SAASoC,QAAS,kBAAML,EAAc7B,IAA3E,sBAHiCA,W,iBCa5BV,eARS,SAAAC,GAAK,MAAK,CAChCkB,MAAOlB,EAAME,SAAS+B,WAGG,SAAA9B,GAAQ,MAAK,CACtC0B,SAAU,SAAAb,GAAC,OAAIb,GFFWe,EEEWF,EAAEC,OAAOC,MFFV,CACpCX,KAAMT,EACNU,QAASU,KAFiB,IAAAA,MEKbnB,EAjBA,SAAC,GAAyB,IAAvBmB,EAAsB,EAAtBA,MAAOW,EAAe,EAAfA,SACvB,OACE,qCACE,oBAAIT,UAAWC,IAAEuB,YAAjB,mCACA,uBAAOxB,UAAWC,IAAEwB,YAAatC,KAAK,OAAOW,MAAOA,EAAOW,SAAUA,U,iBCQ5DiB,MAZf,WACE,OACE,gCACE,oBAAI1B,UAAWC,IAAEM,MAAjB,uBACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,oBAAIP,UAAWC,IAAEM,MAAjB,sBACA,cAAC,EAAD,Q,eCTAoB,EAAgBC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,aA6B9CC,4BAAgB,CAC7BpD,MA5BsB,WAAoE,IAAnED,EAAkE,uDAA1D+C,GAAgC,GAA0B,yCAApBxC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACvE8C,EAAW,GACf,OAAQ/C,GACN,KAAKX,EAGH,OAFA0D,EAAQ,sBAAOtD,GAAP,CAAcQ,IACtB0C,OAAOC,aAAaI,QAAQ,WAAYP,KAAKQ,UAAUF,IAChDA,EACT,KAAKzD,EAGH,OAFAyD,EAAWtD,EAAMiC,QAAO,SAAAG,GAAO,OAAIA,EAAQ3B,KAAOD,KAClD0C,OAAOC,aAAaI,QAAQ,WAAYP,KAAKQ,UAAUF,IAChDA,EAET,QACE,OAAOtD,IAgBXiC,OAZoB,WAAoC,IAAnCjC,EAAkC,uDAA1B,GAA0B,yCAApBO,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACzC,OAAQD,IACDT,EACIU,EAGAR,K,QCxBPyD,EAAcJ,0BAAgB,CAClCnD,SAAUwD,IAKGC,EAFDC,sBAAYH,EAAaI,iCCDvCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,U,kBCZ1BxE,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,WAAa,gCAAgC,OAAS,8B,kBCA5ID,EAAOC,QAAU,CAAC,SAAW,8BAA8B,YAAc,iCAAiC,SAAW,8BAA8B,UAAY,kC","file":"static/js/main.1e401a32.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleFilter\":\"Filter_titleFilter__1wtK3\",\"inputFilter\":\"Filter_inputFilter__3n2RR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1wUu7\"};","const ADD = 'contacts/add';\nconst DELETE = 'contacts/delete';\nconst FILTER = 'contacts/changeFilter';\n\nexport { ADD, DELETE, FILTER };\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { newContact } from '../redux/contacts/contacts-action';\nimport s from 'components/ContactForm/ContactForm.module.css';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label>\n        <h2 className={s.labelTitle}>Name</h2>\n        <input\n          className={s.input}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        <h2 className={s.labelTitle}>Number</h2>\n        <input\n          className={s.input}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add to contacts\n      </button>\n    </form>\n  );\n}\n\nconst mapStateToProps = state => ({\n  items: state.contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) => dispatch(newContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import { v4 as uuidv4 } from 'uuid';\nimport { ADD, DELETE, FILTER } from './contacts-types';\n\nexport const newContact = (name, number) => ({\n  type: ADD,\n  payload: {\n    name,\n    number,\n    id: uuidv4(),\n  },\n});\n\nexport const deleteContact = id => ({\n  type: DELETE,\n  payload: id,\n});\n\nexport const changeFilter = value => ({\n  type: FILTER,\n  payload: value,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { deleteContact } from 'components/redux/contacts/contacts-action';\nimport s from 'components/ContactList/ContactList.module.css';\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.contactItem} key={id}>\n          <p className={s.itemName}>Name: {name}</p>\n          <p className={s.itemName}>Number: {number}</p>\n          <button className={s.deleteBtn} type=\"button\" onClick={() => deleteContact(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalizedFilter = filter.toLowerCase();\n  return allContacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n};\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteContact: id => dispatch(deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../redux/contacts/contacts-action';\nimport s from 'components/Filter/Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <h3 className={s.titleFilter}>Find contacts by name</h3>\n      <input className={s.inputFilter} type=\"text\" value={value} onChange={onChange} />\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport s from 'App.module.css';\n\nfunction App() {\n  return (\n    <div>\n      <h2 className={s.title}>Phonebook</h2>\n      <ContactForm />\n      <Filter />\n      <h2 className={s.title}>Contacts</h2>\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { ADD, DELETE, FILTER } from './contacts-types';\n\nconst localContacts = JSON.parse(window.localStorage.getItem('contacts'));\n\nconst contactsReducer = (state = localContacts ? localContacts : [], { type, payload }) => {\n  let newState = [];\n  switch (type) {\n    case ADD:\n      newState = [...state, payload];\n      window.localStorage.setItem('contacts', JSON.stringify(newState));\n      return newState;\n    case DELETE:\n      newState = state.filter(contact => contact.id !== payload);\n      window.localStorage.setItem('contacts', JSON.stringify(newState));\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nconst filterReducer = (state = '', { type, payload }) => {\n  switch (type) {\n    case FILTER:\n      return payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  items: contactsReducer,\n  filter: filterReducer,\n});\n","import { createStore, combineReducers } from 'redux';\nimport contactsReducer from './contacts/contacts-reducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from 'components/redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__ZCr-C\",\"input\":\"ContactForm_input__gIxqn\",\"labelTitle\":\"ContactForm_labelTitle__3_ZR6\",\"button\":\"ContactForm_button__1mE6o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemText\":\"ContactList_itemText__AX2KI\",\"contactItem\":\"ContactList_contactItem__t7pDX\",\"itemName\":\"ContactList_itemName__1XfPh\",\"deleteBtn\":\"ContactList_deleteBtn__2hO9X\"};"],"sourceRoot":""}